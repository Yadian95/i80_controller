[1/9] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D E:\workplace\ESP32_workplace\i80_controller\build\bootloader\esp-idf\esptool_py && D:\Espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe D:/Espressif/frameworks/esp-idf-v5.1.1/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 E:/workplace/ESP32_workplace/i80_controller/build/bootloader/bootloader.bin"
Bootloader binary size 0x51e0 bytes. 0x2e20 bytes (36%) free.
[2/7] Building C object esp-idf/lvgl__lvgl/CMakeFiles/__idf_lvgl__lvgl.dir/src/extra/libs/fsdrv/lv_fs_fatfs.c.obj
[3/7] Linking C static library esp-idf\lvgl__lvgl\liblvgl__lvgl.a
[4/7] Generating ld/sections.ld
[5/7] Linking CXX executable i80_controller.elf
[6/7] Generating binary image from built executable
esptool.py v4.7.dev1
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated E:/workplace/ESP32_workplace/i80_controller/build/i80_controller.bin
[7/7] cmd.exe /C "cd /D E:\workplace\ESP32_workplace\i80_controller\build\esp-idf\esptool_py && D:\Espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe D:/Espressif/frameworks/esp-idf-v5.1.1/components/partition_table/check_sizes.py --offset 0x8000 partition --type app E:/workplace/ESP32_workplace/i80_controller/build/partition_table/partition-table.bin E:/workplace/ESP32_workplace/i80_controller/build/i80_controller.bin"
i80_controller.bin binary size 0x1e7540 bytes. Smallest app partition is 0x400000 bytes. 0x218ac0 bytes (52%) free.
